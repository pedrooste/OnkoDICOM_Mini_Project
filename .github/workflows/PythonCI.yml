name: Python CI with pytest and flake8

on: ["push", "pull_request"]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      DISPLAY: ':99.0'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install plastimatch
      run: |
        sudo apt-get install plastimatch

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r pre-requirements.txt
        pip install -r requirements.txt
        pip install pytest-xvfb pytest-qt

# Linting and Testing sections uses code from the GitHub actions for OnkoDICOM found at:
# https://github.com/didymo/OnkoDICOM/blob/master/.github/workflows/pythonapp.yml
    - name: Linting setup
      run: |
        pip install flake8

    - name: Lint with flake8
      run: |
        echo "Checking for syntex errors or undefined names, exit on failure"
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        echo ""
        echo "Running full linting, Errors treated as warnings"
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Testing setup
      run: |
        pip install pytest pytest-cov
        sudo apt-get update
        sudo apt-get install -qq xvfb libxkbcommon-x11-0 herbstluftwm libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libopengl0 freeglut3 freeglut3-dev
        # sudo Xvfb :1 -screen 0 1024x768x24 </dev/null &
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
        sleep 3
        herbstluftwm &
        sleep 1

    - name: Testing and Coverage with pytest
      run: |
        python -m pytest "test/" -v --cov-config=.coveragerc --cov-report term-missing --cov=. --cov-fail-under=80     
